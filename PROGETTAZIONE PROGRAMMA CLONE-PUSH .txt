PROGETTAZIONE PROGRAMMA CLONE-PUSH GITHUB

Programma che permetta di fare la clone e la push su GitHub

- link per fare la clone (fisso): git clone https://username@bitbucket.org/xx-xx-xx/nomeRepository

Istruzioni per la clone: 


	- git push "linkClone"

istruzioni per la push: 
	
	- git add .

	- git commit -m "aggiunto il xx/xx/xx" (import Data)

	- git push



Impostazioni:

	- Cartella GIT-CLONE
	- Impostare: Nome Repository, LinkClone(fisso) .csv

Esecuzione Clone:

	- Scegleire quale repository usare

	- Prendere linkClone (da file.csv) e inserirlo su "PathCartella GIT-CLONE"

	- Eseguire istruzioni per la clone

Esecuzione Push: 

	- Stare nella directory del file da inserire (sceglerie il file)

	- comandi da terminale:

		- git status (risposta)

		- git add .
		- git commit -m "aggiunto il xx/xx/xx" (DataTime)

		- git push

Gestione errori:

	- Errore clone: clone di una cartella gi√† clonata, errore che clona la stessa cartella:

		Non gestibile, i file clonati non possono essere eliminati

	- Eorre puhs: pushare una cartella non modificata solleva un eccezione

		Provata a gestire con la libreria time, verificando l'ultima modifica del file

	
GESTIONE PUSH:
	

	1. Push Singolo
	
		1.1 Impostazione cartella di lavoro: pathFile + dir_da_pushare
		1.2 pushare la cartella
			
	2 Push Scelta / Multiplo

		1 Scegliere se 1) pushare multiplo 2) pushare a Scelta
			1.1 Pushare repository a scelta
				1.2.1 Controllare se l'utente ha scelto il NUMERO della cartella o il NOME della cartella
					1.2.1.1 NUMERO
						1.2.1.1.1 Modificare l'ambiente di lavoro, prendendosi dal numero il nome della cartella
						1.2.1.1.2 pushare la cartella
					
					1.2.1.2 NOME: 
						1.2.1.2.2 Controllare se la cartella scelta dall'utente esista nei file da pushare
						1.2.1.2.2 Modificare l'ambiente di lavoro, mettendo la cartella scelta dall'utente nel paht della cartella di lavoro
						1.2.1.2.3 pushare la cartella
						
			1.2 Pushare tutte le repository

				


